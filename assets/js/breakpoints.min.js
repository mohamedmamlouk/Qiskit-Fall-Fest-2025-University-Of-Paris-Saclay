/*
 * Breakpoints Utility
 * Responsive breakpoint management
 */

(function() {
    'use strict';

    var breakpoints = {
        xlarge: 1281,
        large: 981,
        medium: 737,
        small: 481,
        xsmall: 361
    };

    var elements = {};
    var queries = {};
    var events = [];

    // Create media queries
    for (var name in breakpoints) {
        var width = breakpoints[name];
        queries[name] = window.matchMedia('(max-width: ' + width + 'px)');
        
        // Add listener
        (function(n, q) {
            q.addListener(function() {
                updateClasses();
                triggerEvents(n, q.matches);
            });
        })(name, queries[name]);
    }

    function updateClasses() {
        var body = document.body;
        
        // Remove all breakpoint classes
        for (var name in breakpoints) {
            body.classList.remove('breakpoint-' + name);
        }
        
        // Add current breakpoint classes
        for (var name in queries) {
            if (queries[name].matches) {
                body.classList.add('breakpoint-' + name);
            }
        }
    }

    function triggerEvents(name, matches) {
        events.forEach(function(event) {
            if (event.name === name) {
                event.callback(matches);
            }
        });
    }

    // Public API
    window.breakpoints = {
        on: function(name, callback) {
            events.push({
                name: name,
                callback: callback
            });
        },
        
        active: function(name) {
            return queries[name] ? queries[name].matches : false;
        },
        
        current: function() {
            for (var name in queries) {
                if (queries[name].matches) {
                    return name;
                }
            }
            return 'xlarge';
        }
    };

    // Initialize
    updateClasses();

})();
